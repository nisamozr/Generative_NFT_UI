{"ast":null,"code":"var _jsxFileName = \"/home/nisamdheen/sps/nft/client/buildspace-nft-course-starter/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport './styles/App.css';\nimport twitterLogo from \"./assets/twitter-logo.svg\";\nimport { ethers } from \"ethers\";\nimport myNft from \"./GenerativeNFT.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TWITTER_HANDLE = 'nisam_ozr';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\nconst TOTAL_MINT_COUNT = 50;\nconst CONTRACT_ADDRESS = \"0x91d34061cF430F45b0388642CEFEA943152cb7Db\";\n\nconst App = () => {\n  _s();\n\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n\n  const checkIfWalletIsConnected = async () => {\n    const {\n      ethereum\n    } = window;\n\n    if (!ethereum) {\n      console.log(\"Make sure you have metamask!\");\n      return;\n    } else {\n      console.log(\"We have the ethereum object\", ethereum);\n    }\n\n    const accounts = await ethereum.request({\n      method: 'eth_accounts'\n    });\n\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      console.log(\"Found an authorized account:\", account);\n      setCurrentAccount(account);\n      setupEventListener();\n    } else {\n      console.log(\"No authorized account found\");\n    }\n  };\n\n  const connectWallet = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n\n      if (!ethereum) {\n        alert(\"Get MetaMask!\");\n        return;\n      }\n\n      const accounts = await ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      console.log(\"Connected\", accounts[0]);\n      setCurrentAccount(accounts[0]);\n      setupEventListener();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const setupEventListener = async () => {\n    // Most of this looks the same as our function askContractToMintNft\n    try {\n      const {\n        ethereum\n      } = window;\n\n      if (ethereum) {\n        // Same stuff again\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const connectedContract = new ethers.Contract(CONTRACT_ADDRESS, myNft.abi, signer); // THIS IS THE MAGIC SAUCE.\n        // This will essentially \"capture\" our event when our contract throws it.\n        // If you're familiar with webhooks, it's very similar to that!\n\n        connectedContract.on(\"NewEpicNFTMinted\", (from, tokenId) => {\n          console.log(from, tokenId.toNumber());\n          alert(`Hey there! We've minted your NFT and sent it to your wallet. It may be blank right now. It can take a max of 10 min to show up on OpenSea. Here's the link: https://testnets.opensea.io/assets/${CONTRACT_ADDRESS}/${tokenId.toNumber()}`);\n        });\n        console.log(\"Setup event listener!\");\n      } else {\n        console.log(\"Ethereum object doesn't exist!\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const askContractToMintNft = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const connectedContract = new ethers.Contract(CONTRACT_ADDRESS, myNft.abi, signer);\n        console.log(\"Going to pop wallet now to pay gas...\");\n        let nftTxn = await connectedContract.makeAnEpicNFT();\n        console.log(\"Mining...please wait.\");\n        await nftTxn.wait();\n        console.log(`Mined, see transaction: https://rinkeby.etherscan.io/tx/${nftTxn.hash}`);\n      } else {\n        console.log(\"Ethereum object doesn't exist!\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    checkIfWalletIsConnected();\n  }, []);\n\n  const renderMintUI = () => /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: askContractToMintNft,\n    className: \"cta-button connect-wallet-button\",\n    children: \"Mint NFT\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n\n  const renderNotConnectedContainer = () => /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: connectWallet,\n    className: \"cta-button connect-wallet-button\",\n    children: \"Connect to Wallet\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n\n  const OPENSEA_LINK = () => {\n    window.location.href = \"https://testnets.opensea.io/collection/the-quate-v3\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav header-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"header gradient-text nav-title\",\n            children: \"Generative NFT Collection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 16\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"connect\",\n          children: currentAccount === \"\" ? renderNotConnectedContainer() : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"header gradient-text\",\n              children: \"Generative NFT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"sub-text\",\n              children: \"Generative Sentences. Discover your NFT today.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \" mint_div \",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: askContractToMintNft,\n                className: \"cta-button connect-wallet-button\",\n                children: \"Mint NFT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"#\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"opensee\",\n                  src: \"https://storage.opensea.io/files/1385a81846a20a1c80aa0cac3f6114f2.svg\",\n                  alt: \"\",\n                  srcset: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"rairble opensee\",\n                  src: \" https://global-uploads.webflow.com/60f008ba9757da0940af288e/60f29bbc7abeec44f5e53996_rarible.jpg\",\n                  alt: \"\",\n                  srcset: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 28\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 img\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://storage.opensea.io/files/b2e7e4483ab506742cefd228f5ed7a6b.svg\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"Twitter Logo\",\n            className: \"twitter-logo\",\n            src: twitterLogo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"footer-text\",\n            href: TWITTER_LINK,\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: `Nisam_ozr `\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"Oez+vfH4X005OLgBo/Rzy9wdCKo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/nisamdheen/sps/nft/client/buildspace-nft-course-starter/src/App.jsx"],"names":["React","useEffect","useState","ethers","myNft","TWITTER_HANDLE","TWITTER_LINK","TOTAL_MINT_COUNT","CONTRACT_ADDRESS","App","currentAccount","setCurrentAccount","checkIfWalletIsConnected","ethereum","window","console","log","accounts","request","method","length","account","setupEventListener","connectWallet","alert","error","provider","providers","Web3Provider","signer","getSigner","connectedContract","Contract","abi","on","from","tokenId","toNumber","askContractToMintNft","nftTxn","makeAnEpicNFT","wait","hash","renderMintUI","renderNotConnectedContainer","OPENSEA_LINK","location","href","twitterLogo"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport './styles/App.css';\nimport twitterLogo from './assets/twitter-logo.svg';\nimport { ethers } from \"ethers\"\nimport myNft from \"./GenerativeNFT.json\"\n\nconst TWITTER_HANDLE = 'nisam_ozr';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\n\nconst TOTAL_MINT_COUNT = 50;\n\nconst CONTRACT_ADDRESS = \"0x91d34061cF430F45b0388642CEFEA943152cb7Db\";\n\nconst App = () => {\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n\n  const checkIfWalletIsConnected = async () => {\n    const { ethereum } = window;\n\n    if (!ethereum) {\n      console.log(\"Make sure you have metamask!\");\n      return;\n    } else {\n      console.log(\"We have the ethereum object\", ethereum);\n    }\n\n    const accounts = await ethereum.request({ method: 'eth_accounts' });\n\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      console.log(\"Found an authorized account:\", account);\n      setCurrentAccount(account)\n\n      setupEventListener()\n    } else {\n      console.log(\"No authorized account found\")\n    }\n  }\n\n\n  const connectWallet = async () => {\n    try {\n      const { ethereum } = window;\n\n      if (!ethereum) {\n        alert(\"Get MetaMask!\");\n        return;\n      }\n\n      const accounts = await ethereum.request({ method: \"eth_requestAccounts\" });\n\n      console.log(\"Connected\", accounts[0]);\n      setCurrentAccount(accounts[0]);\n      setupEventListener()\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n\n\n  const setupEventListener = async () => {\n    // Most of this looks the same as our function askContractToMintNft\n    try {\n      const { ethereum } = window;\n\n      if (ethereum) {\n        // Same stuff again\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const connectedContract = new ethers.Contract(CONTRACT_ADDRESS, myNft.abi, signer);\n\n        // THIS IS THE MAGIC SAUCE.\n        // This will essentially \"capture\" our event when our contract throws it.\n        // If you're familiar with webhooks, it's very similar to that!\n        connectedContract.on(\"NewEpicNFTMinted\", (from, tokenId) => {\n          console.log(from, tokenId.toNumber())\n          alert(`Hey there! We've minted your NFT and sent it to your wallet. It may be blank right now. It can take a max of 10 min to show up on OpenSea. Here's the link: https://testnets.opensea.io/assets/${CONTRACT_ADDRESS}/${tokenId.toNumber()}`)\n        });\n\n        console.log(\"Setup event listener!\")\n\n      } else {\n        console.log(\"Ethereum object doesn't exist!\");\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const askContractToMintNft = async () => {\n\n\n    try {\n      const { ethereum } = window;\n\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const connectedContract = new ethers.Contract(CONTRACT_ADDRESS, myNft.abi, signer);\n\n        console.log(\"Going to pop wallet now to pay gas...\")\n        let nftTxn = await connectedContract.makeAnEpicNFT();\n\n        console.log(\"Mining...please wait.\")\n        await nftTxn.wait();\n\n        console.log(`Mined, see transaction: https://rinkeby.etherscan.io/tx/${nftTxn.hash}`);\n\n      } else {\n        console.log(\"Ethereum object doesn't exist!\");\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    checkIfWalletIsConnected();\n  }, [])\n\n  const renderMintUI = () => (\n    <button onClick={askContractToMintNft} className=\"cta-button connect-wallet-button\">\n      Mint NFT\n    </button>\n  );\n\n  const renderNotConnectedContainer = () => (\n    <button onClick={connectWallet} className=\"cta-button connect-wallet-button\">\n      Connect to Wallet\n    </button>\n  );\n  const OPENSEA_LINK = () => {\n    window.location.href = \"https://testnets.opensea.io/collection/the-quate-v3\"\n  };\n\n  return (\n    <div className=\"App\">\n      {/* <div className=\"container\"> */}\n      {/* <div className=\"header-container\">\n          <p className=\"header gradient-text\">My NFT Collection</p>\n          <p className=\"sub-text\">\n            Each unique. Each beautiful. Discover your NFT today.\n          </p>\n          {currentAccount === \"\" ? (\n            renderNotConnectedContainer()\n          ) : (\n            renderMintUI()\n          )}\n        </div>\n        <button onclick={OPENSEA_LINK} className=\"cta-button connect-wallet-button\"\n        > opensea</button>\n\n\n        <div className=\"footer-container\">\n          <img alt=\"Twitter Logo\" className=\"twitter-logo\" src={twitterLogo} />\n          <a\n            className=\"footer-text\"\n            href={TWITTER_LINK}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >{`Nisam_ozr @ ${TWITTER_HANDLE}`}</a>\n        </div>\n      </div> */}\n\n      <div className=\"container\">\n\n        <div className=\"nav header-container\">\n\n          <div><p className=\"header gradient-text nav-title\">Generative NFT Collection</p> </div>\n          <div className=\"connect\">\n          {currentAccount === \"\" ? (\n            renderNotConnectedContainer()\n          ) : (\n            \"\"\n          )}\n          </div>\n          {/* <hr /> */}\n\n        </div>\n\n        <div className=\"container\">\n          <div className=\"row body\">\n            <div className=\"col-md-6\">\n\n              <p className=\"header gradient-text\">Generative NFT</p>\n              <p className=\"sub-text\">\n                Generative Sentences. Discover your NFT today.\n\n              </p>\n              <div className=\" mint_div \">\n                <button onClick={askContractToMintNft} className=\"cta-button connect-wallet-button\">\n                  Mint NFT\n                </button>\n                <a href=\"#\"><img className=\"opensee\" src=\"https://storage.opensea.io/files/1385a81846a20a1c80aa0cac3f6114f2.svg\" alt=\"\" srcset=\"\" /></a>\n\n                <a href=\"\"><img className=\"rairble opensee\" src=\" https://global-uploads.webflow.com/60f008ba9757da0940af288e/60f29bbc7abeec44f5e53996_rarible.jpg\" alt=\"\" srcset=\"\" /></a>\n\n              </div>\n\n            </div>\n            <div className=\"col-md-6 img\">\n              <img src=\"https://storage.opensea.io/files/b2e7e4483ab506742cefd228f5ed7a6b.svg\" alt=\"\" />\n\n            </div>\n          </div>\n          <div className=\"footer-container\">\n          <img alt=\"Twitter Logo\" className=\"twitter-logo\" src={twitterLogo} />\n          <a\n            className=\"footer-text\"\n            href={TWITTER_LINK}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >{`Nisam_ozr `}</a>\n        </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}